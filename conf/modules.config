/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

/*
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
*/
    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BEDTOOLS_GENOMECOV_FW' {
            ext.prefix = { meta.strandedness == 'reverse' ? meta.id + '.reverse' :  meta.id + '.forward' }
            ext.args   = '-split -du -strand + -bg'
            publishDir = [
                enabled: false
            ]
        }

    withName: 'BEDTOOLS_GENOMECOV_RV' {
            ext.prefix = { meta.strandedness == 'reverse' ? meta.id + '.forward' :  meta.id + '.reverse' }
            ext.args   = '-split -du -strand - -bg'
            publishDir = [
                enabled: false
            ]
        }

    withName: 'BEDTOOLS_GENOMECOV_US' {
            ext.prefix = { meta.strandedness == 'unstranded' ?: meta.id + 'unstranded' }
            ext.args   = '-split -du -bg'
            publishDir = [
                enabled: false
            ]
        }
    
    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_FORWARD:UCSC_BEDCLIP' {
            ext.prefix = { "${meta.id}.clip.forward" }
            publishDir = [
                enabled: false
            ]
        }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_REVERSE:UCSC_BEDCLIP' {
            ext.prefix = { "${meta.id}.clip.reverse" }
            publishDir = [
                enabled: false
            ]
        }
    
     withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_REVERSE:UCSC_BEDCLIP' {
            ext.prefix = { "${meta.id}.clip.unstranded" }
            publishDir = [
                enabled: false
            ]
        }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_FORWARD:UCSC_BEDGRAPHTOBIGWIG' {
            ext.prefix = { "${meta.id}.forward" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_REVERSE:UCSC_BEDGRAPHTOBIGWIG' {
            ext.prefix = { "${meta.id}.reverse" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_UNSTRANDED:UCSC_BEDGRAPHTOBIGWIG' {
            ext.prefix = { "${meta.id}.unstranded" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
}
